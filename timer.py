#! python
"""
‰ªªÂä°ËÆ°Êó∂

Á©∫ -> Êü•ÁúãÂÖ®ÈÉ®‰ªªÂä°
‰ªªÂä°Âêç -> Êñ∞Âª∫/Êü•Áúã‰ªªÂä°
clr [‰ªªÂä°Âêç] -> Ê∏ÖÈô§Êüê‰∏™‰ªªÂä°ÊàñÊ∏ÖÁ©∫ÊâÄÊúâ‰ªªÂä°
"""
import datetime


def time2s(time_or_delta):
    return str(time_or_delta)[:-7]


class Timer:
    def __init__(self):
        self.tasks = {}

    def show_all(self):
        if not self.tasks:
            print('‚ùóÔ∏è ÊöÇÊó†Âú®ÂÜå‰ªªÂä°')
            return

        print('üç∫ ÂÖ®ÈÉ®‰ªªÂä°Ôºö')
        now = datetime.datetime.now()
        for name, start in self.tasks.items():
            print(f'\t{name}\t{time2s(start)}\t{time2s(now - start)}')

    def create_or_show(self, name):
        if name in self.tasks:
            start = self.tasks[name]
            print(
                'üç∫ ‰ªªÂä°ËØ¶ÊÉÖÔºö\n'
                f'\tÂêçÁß∞Ôºö{name}\n'
                f'\tÂºÄÂßãÔºö{start}\n'
                f'\tËÄóÊó∂Ôºö{time2s(datetime.datetime.now() - start)}'
            )
        else:
            now = datetime.datetime.now()
            self.tasks[name] = now
            print(f'üç∫ Ê∑ªÂä†ÊàêÂäüÔºö{name}\tÂºÄÂßãÊó∂Èó¥Ôºö{time2s(now)}')

    def clr(self, name=None):
        if not name:
            self.tasks.clear()
            print('üç∫ ÊâÄÊúâ‰ªªÂä°Â∑≤Ê∏ÖÈô§')
            return

        if name in self.tasks:
            del self.tasks[name]
            print(f'üç∫ Âà†Èô§ÊàêÂäüÔºö{name}')
        else:
            print(f'‚ùóÔ∏è ‰∏çÂ≠òÂú®ÁöÑ‰ªªÂä°ÂêçÔºö{name}')


if __name__ == '__main__':
    t = Timer()
    while 1:
        try:
            s_in = input('>>> ').strip()
        except (KeyboardInterrupt, EOFError):
            exit(print('\nüçª'))

        if not s_in:
            t.show_all()
        elif s_in.startswith('clr'):
            t.clr((s_in + ' ').split(' ', 1)[1].strip())
        else:
            t.create_or_show(s_in)
